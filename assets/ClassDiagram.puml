@startuml
left to right direction

class ActiveWorkoutState {
  +isActive: bool
  +activeExercises: List<Exercise>
  +workoutName: String
  +startWorkout(): void
  +endWorkout(): void
}

class TimerService {
  +timer: Timer?
  +startTimer(): void
  +stopTimer(): void
}

class Exercise {
  +name: String
  +sets: List<int>?
  +reps: List<num>?
  +weight: List<num>?
  +distance: List<num>?
  +duration: List<num>?
  +toString(): String
}

class FoodApi {
  +id: int?
  +barcode: String
  +calories: double
  +proteins: double
  +getAllMeals(): dynamic
}

class DBHelper {
  +getDatabase(): dynamic
  +insertMeal(): dynamic
  +insertExercise(): dynamic
  +insertWorkout(): dynamic
  +getAllMeals(): dynamic
}

class Navigation {
  +createState(): State<MainScaffold>
}

class ActiveWorkout {
  +createState(): State<ActiveWorkout>
}

class ExerciseCard {
  +exercise: Exercise
  +exerciseIndex: int
}

class Profile {
  +Weight: double
  +Name: String
  +createState(): State<Profile>
}

class Settings {}

class WorkoutTemplate {
  +WorkoutTemplates: List<WorkoutTemplate>
}

class activeWorkoutWindow {}

class addExercise {}

class addFood {}

class addFavoriteMeal {}

class Food {
    +meals: List<Map<String, dynamic>>
    +selectedDate: DateTime
}

class IntroScene {}

class Measure {
  +bool animate
  +DateTimeRange selectedDateRange
  +dynamic _fetchCaloriesData()
  +dynamic _fetchProteinsData()
  +dynamic _fetchWeightData()
  +void _selectDateRange()
}

class Navigation {
  +int _currentIndex
  +List<Widget> _children
  +void onTabTapped(int index)
}

class SearchExercises {
    +List<Exercise> exercises
    +List<Exercise> filteredExercises
    +void initState()
    +void filterSearchResults(String query)
    +void _getExercises()
}

class TemplateCard {
 +void fetchWorkoutTemplates()
  +Widget build()
  +Widget listBuilder2()
  +dynamic checkDatabase()
}

class Workout {
    +TextButton startWorkoutButton()
    +ListView.builder itemBuilder()
}

ActiveWorkoutState o-- TimerService
ActiveWorkoutState o-- Exercise
ExerciseCard o-- Exercise
Profile --o DBHelper
Food -- DBHelper
addFood --o FoodApi
Workout -- DBHelper
ActiveWorkoutState -- ActiveWorkout
Measure --o DBHelper
WorkoutTemplate --o DBHelper
ActiveWorkout ..> addExercise
ActiveWorkout <.. Workout
ActiveWorkout --o ExerciseCard
addExercise ..> SearchExercises

main o-- Navigation
main ..> activeWorkoutWindow
main ..> IntroScene

Navigation ..> Profile
Navigation ..> Food
Navigation ..> Measure
Navigation ..> Workout
Navigation ..> Settings

Food o-- addFood
Food o-- addFavoriteMeal

Workout o-- WorkoutTemplate

Profile -- Settings
Profile --o IntroScene

WorkoutTemplate o-- TemplateCard

@enduml
